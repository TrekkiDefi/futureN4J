
package com.github.ittalks.commons.example.ws.cxf.integration.client;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "ComplexUserServiceService", targetNamespace = "http://server.integration.cxf.ws.example.commons.ittalks.github.com/", wsdlLocation = "http://localhost:9090/futureN4J/ws/users?wsdl")
public class ComplexUserServiceService
    extends Service
{

    private final static URL COMPLEXUSERSERVICESERVICE_WSDL_LOCATION;
    private final static WebServiceException COMPLEXUSERSERVICESERVICE_EXCEPTION;
    private final static QName COMPLEXUSERSERVICESERVICE_QNAME = new QName("http://server.integration.cxf.ws.example.commons.ittalks.github.com/", "ComplexUserServiceService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:9090/futureN4J/ws/users?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        COMPLEXUSERSERVICESERVICE_WSDL_LOCATION = url;
        COMPLEXUSERSERVICESERVICE_EXCEPTION = e;
    }

    public ComplexUserServiceService() {
        super(__getWsdlLocation(), COMPLEXUSERSERVICESERVICE_QNAME);
    }

    public ComplexUserServiceService(WebServiceFeature... features) {
        super(__getWsdlLocation(), COMPLEXUSERSERVICESERVICE_QNAME, features);
    }

    public ComplexUserServiceService(URL wsdlLocation) {
        super(wsdlLocation, COMPLEXUSERSERVICESERVICE_QNAME);
    }

    public ComplexUserServiceService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, COMPLEXUSERSERVICESERVICE_QNAME, features);
    }

    public ComplexUserServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ComplexUserServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ComplexUserService
     */
    @WebEndpoint(name = "ComplexUserServicePort")
    public ComplexUserService getComplexUserServicePort() {
        return super.getPort(new QName("http://server.integration.cxf.ws.example.commons.ittalks.github.com/", "ComplexUserServicePort"), ComplexUserService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ComplexUserService
     */
    @WebEndpoint(name = "ComplexUserServicePort")
    public ComplexUserService getComplexUserServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://server.integration.cxf.ws.example.commons.ittalks.github.com/", "ComplexUserServicePort"), ComplexUserService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (COMPLEXUSERSERVICESERVICE_EXCEPTION!= null) {
            throw COMPLEXUSERSERVICESERVICE_EXCEPTION;
        }
        return COMPLEXUSERSERVICESERVICE_WSDL_LOCATION;
    }

}
